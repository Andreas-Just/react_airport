{"version":3,"sources":["components/Nav/Nav.tsx","store/loading.ts","constants/actionTypes.ts","store/flights.ts","store/direction.ts","constants/flightDirection.ts","helpers/api.ts","store/index.ts","components/HomePage/HomePage.tsx","components/ErrorPage/ErrorPage.tsx","components/DirectionBtn/DirectionBtn.tsx","helpers/statusFlight.ts","components/FlightItem/FlightItem.tsx","helpers/flightsData.ts","components/FlightsTable/FlightsTable.tsx","components/FlightsPage/FlightsPage.tsx","components/common/Spinner/Spinner.tsx","components/FlightDetails/FlightDetails.tsx","components/Main/Main.tsx","components/common/BackgroundAnimation/BackgroundAnimation.tsx","App.tsx","index.tsx"],"names":["Nav","Menu","className","inverted","color","Item","src","alt","position","as","NavLink","name","to","exact","setError","error","type","initialState","loading","loaded","reduce","loadingState","action","departure","arrival","flightsState1","body","setDirection","direction","directionState","today","Date","toISOString","split","reverse","join","getFlights","day","fetch","then","response","json","rootReducer","combineReducers","loadingReducer","flights","flightsReducer","directionReducer","getLoading","state","getLoaded","getError","getFlightsAll","getDirection","store","createStore","composeWithDevTools","applyMiddleware","thunk","HomePage","Segment","Header","content","size","ErrorPage","message","buttonConfig","DirectionBtn","dispatch","useDispatch","useSelector","map","cn","key","onClick","viewBox","xmlns","transform","fill","d","statusFlight","status","FlightItem","flight","ID","airline","airportTo","airportFrom","codeShareData","gateNo","timeDepShedule","timeToStand","timeTakeofFact","term","match","useRouteMatch","selectors","localDate","departureDate","localeTime","getHours","getMinutes","toString","padStart","departureTime","Table","Row","textAlign","Cell","toLowerCase","en","codeShare","Button","Link","path","icon","basic","Icon","dateMap","yesterday","tomorrow","headersConfig","terminal","gate","time","destination","details","FlightsTable","tableHeaders","length","code","Object","entries","createTableHeaders","currentDay","useParams","flightsDay","useMemo","filter","checkMap","checkDay","flightDate","lookupDate","setDate","getDate","flightsData","striped","padded","fixed","HeaderCell","Body","tabsConfig","id","withRouter","history","useHistory","useEffect","isExact","push","pathname","activeClassName","Spinner","date","stand","options","month","FlightDetails","flightsId","currentFlight","find","checkinNo","visibleDate","toLocaleDateString","slice","console","log","Image","logoSmallName","verticalAlign","collapsing","Accordion","panels","title","Label","Message","info","ReactHtmlParser","about","Main","a","from","BackgroundAnimation","App","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb432c15.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Nav.scss';\nimport { Menu } from 'semantic-ui-react';\n\nconst Nav = () => {\n  return (\n    <Menu\n      className=\"Nav NavBar\"\n      inverted\n      color=\"blue\"\n    >\n      <Menu.Item className=\"Nav-Item\">\n        <img\n          className=\"Nav-Logo\"\n          src=\"https://iev.aero/_nuxt/img/logo.c97e286.png\"\n          alt=\"Sikorsky Airport\"\n        />\n      </Menu.Item>\n\n      <Menu.Item\n        className=\"Nav-Item\"\n        position=\"right\"\n        as={NavLink}\n        name=\"home\"\n        to=\"/\"\n        exact\n      />\n      <Menu.Item\n        className=\"Nav-Item\"\n        as={NavLink}\n        name=\"flights\"\n        to=\"/flights\"\n        exact\n      />\n    </Menu>\n  );\n};\n\nexport default Nav;\n","import { Action } from 'redux';\nimport {\n  START_LOADING,\n  SET_LOADED,\n  SET_ERROR,\n  FINISH_LOADING,\n} from '../constants/actionTypes';\n\ntype StartLoadingAction = Action<typeof START_LOADING>;\ntype FinishLoadingAction = Action<typeof FINISH_LOADING>;\ntype SetLoadedAction = Action<typeof SET_LOADED>;\ntype SetErrorAction = Action<typeof SET_ERROR> & {\n  error: string;\n};\n\nexport const startLoading = (): StartLoadingAction => ({\n  type: START_LOADING,\n});\nexport const finishLoading = (): FinishLoadingAction => ({\n  type: FINISH_LOADING,\n});\nexport const setLoaded = (): SetLoadedAction => ({\n  type: SET_LOADED,\n});\nexport const setError = (error = ''): SetErrorAction => ({\n  type: SET_ERROR,\n  error,\n});\n\nexport type LoadingState = {\n  loading: boolean;\n  loaded: boolean;\n  error: string;\n};\n\nconst initialState: LoadingState = {\n  loading: false,\n  loaded: false,\n  error: '',\n};\n\ntype LoadingAction = StartLoadingAction | SetLoadedAction | SetErrorAction | FinishLoadingAction;\n\nconst reduce = (loadingState = initialState, action: LoadingAction): LoadingState => {\n  switch (action.type) {\n    case START_LOADING:\n      return { ...loadingState, loading: true };\n    case SET_LOADED:\n      return { ...loadingState, loaded: true };\n    case SET_ERROR:\n      return { ...loadingState, error: action.error };\n    case FINISH_LOADING:\n      return { ...loadingState, loading: false };\n    default:\n      return loadingState;\n  }\n};\n\nexport default reduce;\n","export const START_LOADING = 'START_LOADING';\nexport const SET_LOADED = 'SET_LOADED';\nexport const SET_ERROR = 'SET_ERROR';\nexport const FINISH_LOADING = 'FINISH_LOADING';\n\nexport const INIT_FLIGHTS = 'INIT_FLIGHTS';\n\nexport const SET_DIRECTION = 'SET_DIRECTION';\n","import { Action } from 'redux';\nimport { INIT_FLIGHTS } from '../constants/actionTypes';\n\ntype FlightsAction = Action<typeof INIT_FLIGHTS> & {\n  body: IFlights;\n};\n\nexport const initFlights = (body: IFlights): FlightsAction => ({\n  type: INIT_FLIGHTS,\n  body,\n});\n\nexport type FlightsState = {\n  [key: string]: IFlight[];\n  departure: IFlight[];\n  arrival: IFlight[];\n};\n\nconst initialState: FlightsState = {\n  departure: [],\n  arrival: [],\n};\n\nconst reduce = (\n  flightsState1 = initialState,\n  { type, body }: FlightsAction,\n): FlightsState => {\n  switch (type) {\n    case INIT_FLIGHTS:\n      return {\n        ...flightsState1,\n        departure: body.departure,\n        arrival: body.arrival,\n      };\n    default:\n      return flightsState1;\n  }\n};\n\nexport default reduce;\n","import { Action } from 'redux';\nimport { DEPARTURE, ARRIVAL } from '../constants/flightDirection';\nimport { SET_DIRECTION } from '../constants/actionTypes';\n\ntype DirectionAction = Action<typeof SET_DIRECTION> & {\n  direction: typeof DEPARTURE | typeof ARRIVAL;\n};\n\nexport const setDirection = (direction: typeof DEPARTURE | typeof ARRIVAL): DirectionAction => ({\n  type: SET_DIRECTION,\n  direction,\n});\n\nconst reduce = (\n  directionState = DEPARTURE,\n  { type, direction }: DirectionAction,\n): string => {\n  switch (type) {\n    case SET_DIRECTION:\n      if (direction === directionState) {\n        return directionState;\n      }\n\n      return direction;\n    default:\n      return directionState;\n  }\n};\n\nexport default reduce;\n","export const DEPARTURE = 'departure';\nexport const ARRIVAL = 'arrival';\n","const API_URL = 'https://api.iev.aero/api/flights/';\n\nconst getData = <T>(day: string): Promise<T[]> => {\n  return fetch(`${API_URL}${day}`)\n    .then(response => response.json());\n};\n\nconst today = new Date()\n  .toISOString().split('T')[0]\n  .split('-').reverse().join('-');\n\nexport const getFlights = () => getData<IFlights>(today)\n  .then(({ body }: any) => body);\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { Dispatch } from 'react';\n\nimport loadingReducer, {\n  setError, finishLoading, startLoading, setLoaded,\n} from './loading';\nimport flightsReducer, { initFlights } from './flights';\nimport directionReducer from './direction';\nimport { getFlights } from '../helpers/api';\n\n/**\n * Each concrete reducer will receive all the actions but only its part of the state\n */\nconst rootReducer = combineReducers({\n  loading: loadingReducer,\n  flights: flightsReducer,\n  direction: directionReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\n// Selectors - a function receiving Redux state and returning some data from it\nexport const getLoading = (state: RootState) => state.loading.loading;\nexport const getLoaded = (state: RootState) => state.loading.loaded;\nexport const getError = (state: RootState) => state.loading.error;\nexport const getFlightsAll = (state: RootState) => state.flights;\nexport const getDirection = (state: RootState) => state.direction;\n\n/**\n * Thunk - is a function that should be used as a normal action creator dispatch(loadFlights())\n */\nexport const loadFlights = () => {\n  return async (dispatch: Dispatch<any>) => {\n    dispatch(startLoading());\n\n    try {\n      const flights = await getFlights();\n\n      dispatch(initFlights(flights));\n      dispatch(setLoaded());\n    } catch (error) {\n      dispatch(setError(error.message));\n    }\n\n    dispatch(finishLoading());\n  };\n};\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nexport default store;\n","import React from 'react';\nimport { Header, Segment } from 'semantic-ui-react';\nimport './HomePage.scss';\n\nconst HomePage = () => (\n  <div className=\"HomePage\">\n    <Segment\n      className=\"HomePage-Wrapper\"\n    >\n      <Header\n        content=\"Welcome to the Sikorsky Airport project!\"\n        className=\"HomePage-Header\"\n        size=\"huge\"\n        color=\"blue\"\n      />\n      <Header\n        className=\"HomePage-Text\"\n        size=\"large\"\n        color=\"blue\"\n      >\n        Here you can download and view the list of flights of the Sikorsky\n        Airport in the form of a table for three days: yesterday, today,\n        tomorrow. You can also look at the flight information and find out the\n        airline’s contacts.\n        The Redux library is used to store and control the state of the\n        application.\n      </Header>\n    </Segment>\n  </div>\n);\n\nexport default HomePage;\n","import React from 'react';\n\ntype Props = {\n  message: string;\n};\n\nconst ErrorPage: React.FC<Props> = ({ message }) => <h2>{message}</h2>;\n\nexport default ErrorPage;\n","import React from 'react';\nimport cn from 'classnames';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getDirection } from '../../store';\nimport { setDirection } from '../../store/direction';\nimport { ARRIVAL, DEPARTURE } from '../../constants/flightDirection';\nimport './DirectionBtn.scss';\n\ntype ButtonConfig = {\n  [key: string]: typeof DEPARTURE | typeof ARRIVAL;\n};\n\nconst buttonConfig: ButtonConfig[] = [\n  { name: 'departure' },\n  { name: 'arrival' },\n];\n\nconst DirectionBtn = () => {\n  const dispatch = useDispatch();\n  const direction = useSelector(getDirection);\n\n  return (\n    <div className=\"DirectionBtn\">\n      {buttonConfig.map(({ name }) => (\n        name === DEPARTURE\n          ? (\n            <button\n              className={cn({\n                'DirectionBtn-AirBtn DirectionBtn-AirBtn_departures': true,\n                'DirectionBtn-AirBtn_focus': direction === DEPARTURE,\n                'DirectionBtn-AirBtn_focusNo': direction !== DEPARTURE,\n              })}\n              key={name}\n              type=\"button\"\n              onClick={() => dispatch(setDirection(DEPARTURE))}\n            >\n              <span>\n                <svg\n                  className=\"DirectionBtn-Svg\"\n                  viewBox=\"0 0 40 28\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <g\n                    transform=\"translate(-1.000000, -1.000000)\"\n                    fill=\"currentColor\"\n                  >\n                    <path\n                      d=\"M40.9190312,14.2925525 C40.731055,13.5210761 40.2396434,12.8581323 39.5561585,12.4539552 C38.8726735,12.0497781 38.0549837,11.9385881 37.2883912,12.1455827 L26.8096581,15.0218819 L13.1945082,2 L9.38678826,3.03046545 L17.5564785,17.5510243 L7.75204986,20.2442408 L3.86129243,17.1278331 L1,17.9171897 L4.59162231,24.3200818 L6.11030829,27.0112974 L9.26373268,26.1409043 L19.7414654,23.2656055 L28.3253427,20.9165445 L38.8070772,18.0372439 C40.4055057,17.5625364 41.3397513,15.9060318 40.9190312,14.2925525 Z\"\n                      transform=\"translate(21.009879, 14.505649) rotate(-4.012171) translate(-21.009879, -14.505649)\"\n                    />\n                  </g>\n                </svg>\n              </span>\n              {`${name}s`}\n            </button>\n          ) : (\n            <button\n              className={cn({\n                'DirectionBtn-AirBtn DirectionBtn-AirBtn_arrivals': true,\n                'DirectionBtn-AirBtn_focus': direction === ARRIVAL,\n                'DirectionBtn-AirBtn_focusNo': direction !== ARRIVAL,\n              })}\n              key={name}\n              type=\"button\"\n              onClick={() => dispatch(setDirection(ARRIVAL))}\n            >\n              <span>\n                <svg\n                  className=\"DirectionBtn-Svg\"\n                  viewBox=\"0 0 40 28\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <g\n                    fill=\"currentColor\"\n                    transform=\"translate(-4.000000, -7.000000)\"\n                  >\n                    <path\n                      d=\"M43.8940167,20.2848496 C43.7061583,19.5138567 43.2150547,18.8513283 42.531998,18.4474045 C41.8489414,18.0434806 41.031764,17.9323603 40.2656518,18.1392252 L29.793485,21.013722 L16.1868667,8 L12.3815328,9.02981973 L20.5461037,23.5412796 L10.7478188,26.2328084 L6.85949946,23.1183536 L4,23.9072155 L7.5893717,30.3060954 L9.10710602,32.9956246 L12.2585544,32.1257769 L22.7297214,29.2522799 L31.3082198,26.9046908 L41.7833862,24.0271945 C43.3808131,23.5527844 44.3144732,21.8973179 43.8940167,20.2848496 Z\"\n                      transform=\"translate(23.997341, 20.497812) rotate(27.974730) translate(-23.997341, -20.497812) \"\n                    />\n                  </g>\n                </svg>\n              </span>\n              {`${name}s`}\n            </button>\n          )))}\n    </div>\n  );\n};\n\nexport default DirectionBtn;\n","export const statusFlight = (status: Status): string => {\n  switch (status) {\n    case 'ON':\n      return 'On time';\n    case 'CX':\n      return 'Canceled';\n    case 'LN':\n      return 'Landed';\n    case 'CK':\n      return 'Check-in';\n    case 'FR':\n      return 'In flight';\n    case 'BD':\n      return 'Boarding';\n    case 'DP':\n      return 'Departed';\n    case 'DV':\n      return 'Route change';\n    case 'GC':\n      return 'Gate closed';\n    default:\n      return status;\n  }\n};\n","import React from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { Button, Icon, Table } from 'semantic-ui-react';\nimport * as selectors from '../../store';\nimport { statusFlight } from '../../helpers/statusFlight';\nimport { DEPARTURE } from '../../constants/flightDirection';\nimport './FlightItem.scss';\nimport cn from 'classnames';\n\ntype Props = {\n  flight: IFlight;\n};\n\nconst FlightItem: React.FC<Props> = ({ flight: {\n  ID,\n  airline,\n  'airportToID.city_en': airportTo,\n  'airportFromID.city_en': airportFrom,\n  codeShareData,\n  gateNo = '',\n  status,\n  timeDepShedule = '',\n  timeToStand = '',\n  timeTakeofFact = '',\n  term,\n} }) => {\n  const match = useRouteMatch('/flights');\n  const direction = useSelector(selectors.getDirection);\n  const localDate = new Date(timeDepShedule || timeToStand);\n  const departureDate = new Date(timeTakeofFact);\n  const localeTime = `${localDate.getHours()}:${localDate\n    .getMinutes().toString().padStart(2, '0')}`;\n  const departureTime = `${departureDate.getHours()}:${departureDate\n    .getMinutes().toString().padStart(2, '0')}`;\n\n  return (\n    <Table.Row className=\"Flight FlightsTable-TableRow\" textAlign=\"center\">\n      <Table.Cell className=\"Flight-Term\">\n        <span className={cn({\n          'Flight-TermCircle': true,\n          [`Flight-TermCircle_${term.toLowerCase()}`]: true,\n        })}\n        >\n          {term}\n        </span>\n      </Table.Cell>\n      {direction === DEPARTURE ? <Table.Cell>{gateNo}</Table.Cell> : null}\n      <Table.Cell>{localeTime}</Table.Cell>\n      <Table.Cell>{airportTo || airportFrom}</Table.Cell>\n      <Table.Cell>\n        {status === 'DP'\n          ? `${statusFlight(status)} ${\n            timeTakeofFact ? `at: ${departureTime}` : ''\n          }`\n          : statusFlight(status)}\n      </Table.Cell>\n      <Table.Cell>{airline ? airline.en.name : null}</Table.Cell>\n      <Table.Cell>{codeShareData[0].codeShare}</Table.Cell>\n      <Table.Cell className=\"Flight-Details\">\n        <Button\n          className=\"Flight-DetailsButton\"\n          as={Link}\n          to={`${match?.path}/${ID}`}\n          icon\n          basic\n          color=\"blue\"\n          size=\"small\"\n          airline={airline}\n        >\n          <Icon className=\"Flight-DetailsIcon\" name=\"plane\" />\n          Details\n        </Button>\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nexport default FlightItem;\n","const dateMap = {\n  yesterday: -1,\n  today: 0,\n  tomorrow: +1,\n};\n\nexport const flightsData = (flights: IFlight[], day: keyof DateMap) => {\n  return flights.filter((flight: IFlight) => {\n    const flightDate = new Date(flight.timeDepShedule || flight.timeToStand);\n    const lookupDate = new Date();\n    const currentDayCheck = (checkMap: DateMap, checkDay: keyof DateMap) => {\n      lookupDate.setDate(lookupDate.getDate() + checkMap[checkDay]);\n    };\n\n    currentDayCheck(dateMap, day);\n\n    return flightDate.getDate() === lookupDate.getDate();\n  });\n};\n","import React, { useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport cn from 'classnames';\nimport { Table } from 'semantic-ui-react';\nimport * as selectors from '../../store';\nimport FlightItem from '../FlightItem';\nimport { ARRIVAL } from '../../constants/flightDirection';\nimport { flightsData } from '../../helpers/flightsData';\nimport './FlightsTable.scss';\n\nconst headersConfig: IHeadersConfig = {\n  terminal: 'Terminal',\n  gate: 'Gate',\n  time: 'Local time',\n  destination: 'Destination',\n  status: 'Status',\n  airline: 'Airline',\n  flight: 'Flight',\n  details: 'Details',\n};\n\ntype TableHeader = {\n  code: string;\n  name: string;\n};\n\nconst createTableHeaders = (flights: IFlight[]): TableHeader[] => {\n  if (flights.length === 0) {\n    return [{ name: 'There are no flights', code: '' }];\n  }\n\n  return (\n    Object.entries(headersConfig).map(([key, value]) => ({\n      code: key, name: value,\n    }))\n  );\n};\n\nconst FlightsTable = () => {\n  const direction = useSelector(selectors.getDirection);\n  const flights = useSelector(selectors.getFlightsAll)[direction];\n  const tableHeaders = createTableHeaders(flights);\n  const { currentDay } = useParams();\n\n  const flightsDay = useMemo(() => {\n    return flightsData(flights, currentDay);\n  }, [flights, currentDay]);\n\n  return (\n    <Table\n      className=\"FlightsTable\"\n      striped\n      padded\n      fixed\n    >\n      <Table.Header className=\"FlightsTable-TableHeader\">\n        <Table.Row className=\"FlightsTable-TableRow\">\n          {tableHeaders.map(({ name, code }) => (\n            direction === ARRIVAL && name === 'Gate' ? null\n              : (\n                <Table.HeaderCell\n                  key={code}\n                  textAlign=\"center\"\n                  className={cn({\n                    'FlightsTable-HeaderCell': true,\n                    [`FlightsTable-HeaderCell_${code}`]: true,\n                  })}\n                >\n                  {name}\n                </Table.HeaderCell>\n              )))}\n        </Table.Row>\n      </Table.Header>\n\n      <Table.Body className=\"FlightsTable-TableBody\">\n        {flightsDay.map(flight => (\n          <FlightItem\n            key={flight.ID}\n            flight={flight}\n          />\n        ))}\n      </Table.Body>\n    </Table>\n  );\n};\n\nexport default FlightsTable;\n","import React, { useEffect } from 'react';\nimport {\n  NavLink,\n  withRouter,\n  useHistory,\n  useRouteMatch,\n} from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { Header } from 'semantic-ui-react';\nimport * as selectors from '../../store';\nimport DirectionBtn from '../DirectionBtn';\nimport FlightsTable from '../FlightsTable';\nimport './FlightsPage.scss';\n\ntype TabsConfig = {\n  id: number;\n  name: string;\n};\n\nconst tabsConfig: TabsConfig[] = [\n  { id: 1, name: 'yesterday' },\n  { id: 2, name: 'today' },\n  { id: 3, name: 'tomorrow' },\n];\n\nconst FlightsPage = () => {\n  const error = useSelector(selectors.getError);\n  const history = useHistory();\n  const match = useRouteMatch('/flights');\n\n  useEffect(() => {\n    if (match?.isExact) {\n      history.push({ pathname: '/flights/today' });\n    }\n  }, [match, history]);\n\n  return (\n    <div className=\"FlightsPage\">\n      <Header\n        className=\"FlightsPage-Header\"\n        content=\"Flights table\"\n        color=\"blue\"\n        size=\"huge\"\n      />\n      <Header\n        className=\"FlightsPage-Error\"\n        content={error}\n        color=\"red\"\n        size=\"medium\"\n      />\n      <DirectionBtn />\n      <div className=\"FlightsPage-Tabs ui attached menu blue\">\n        {tabsConfig.map(({ id, name }: TabsConfig) => (\n          <NavLink\n            key={id}\n            className=\"FlightsPage-Link item\"\n            activeClassName=\"FlightsPage-Link_active\"\n            to={`${match?.path}/${name}`}\n          >\n            {name}\n          </NavLink>\n        ))}\n      </div>\n      <div className=\"FlightsPage-TabPane ui attached segment active tab\">\n        <FlightsTable />\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(FlightsPage);\n","import React from 'react';\nimport './Spinner.scss';\n\nconst Spinner = () => (\n  <div className=\"Spinner\">\n    <h2 className=\"Spinner-TextInfo\">\n      Loa\n      <span className=\"Spinner-D\">d</span>\n      ing...\n    </h2>\n    <div className=\"Spinner-Circle\">\n      <span className=\"Spinner-Line\" />\n      <span className=\"Spinner-Line\" />\n      <span className=\"Spinner-Line\" />\n      <span className=\"Spinner-Line\" />\n    </div>\n  </div>\n);\n\nexport default Spinner;\n","import React, { useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport {\n  Header, Table, Image, Accordion, Message, Label,\n} from 'semantic-ui-react';\nimport cn from 'classnames';\nimport ReactHtmlParser from 'react-html-parser';\nimport * as selectors from '../../store';\nimport Spinner from '../common/Spinner';\nimport { statusFlight } from '../../helpers/statusFlight';\nimport { DEPARTURE, ARRIVAL } from '../../constants/flightDirection';\nimport './FlightDetails.scss';\n\nconst headersDetailsConfig: IHeadersDetailsConfig = {\n  date: 'Date',\n  time: 'Local time',\n  terminal: 'Terminal',\n  flight: 'Flight',\n  stand: 'Stand',\n  gate: 'Gate',\n};\n\ntype TableHeader = {\n  code: string;\n  name: string;\n};\n\nconst tableHeaders: TableHeader[] = Object.entries(headersDetailsConfig)\n  .map(([key, value]) => ({\n    code: key, name: value,\n  }));\n\nconst options = { day: '2-digit', month: '2-digit' };\n\nconst FlightDetails = () => {\n  const flights = useSelector(selectors.getFlightsAll);\n  const { flightsId } = useParams();\n  const currentFlight: IFlight | undefined = useMemo(() => {\n    return (\n      flights[DEPARTURE].find(flight => flight.ID === +flightsId)\n      || flights[ARRIVAL].find(flight => flight.ID === +flightsId)\n    );\n  }, [flights, flightsId]);\n\n  if (!currentFlight) {\n    return <Spinner />;\n  }\n\n  const {\n    'airportToID.city_en': airportTo,\n    'airportFromID.city_en': airportFrom,\n    timeDepShedule = '',\n    timeToStand = '',\n    term,\n    codeShareData,\n    checkinNo,\n    gateNo,\n    status,\n    airline,\n  } = currentFlight;\n  const localDate = new Date(timeDepShedule || timeToStand);\n  const visibleDate = localDate.toLocaleDateString('de-DE', options).slice(0, -1);\n  const localeTime = `${localDate.getHours()}:${localDate\n    .getMinutes().toString().padStart(2, '0')}`;\n  console.log(airline.en)\n\n  return (\n    <div className=\"FlightDetails\">\n      <Header\n        className=\"FlightDetails-Header\"\n        content=\"Flight details\"\n        size=\"huge\"\n        color=\"blue\"\n      />\n      <div className=\"FlightDetails-Flight\">\n        <Header\n          className=\"FlightDetails-FlightCode\"\n          content={codeShareData[0].codeShare}\n          size=\"large\"\n        />\n        <Header\n          className=\"FlightDetails-FlightFlies\"\n          content=\"flies in\"\n          size=\"large\"\n        />\n      </div>\n      <div className=\"FlightDetails-Destination\">\n        <Header\n          className=\"FlightDetails-DestinationHeader\"\n          content={airportTo || airportFrom}\n        />\n        <Image\n          className=\"FlightDetails-DestinationImage\"\n          src={airline.en.logoSmallName}\n          verticalAlign=\"middle\"\n          size=\"small\"\n        />\n      </div>\n      <Table\n        className=\"FlightDetails-Table\"\n        collapsing\n        padded=\"very\"\n        basic=\"very\"\n        size=\"large\"\n      >\n        <Table.Header className=\"FlightDetails-TableHeader\">\n          <Table.Row className=\"FlightDetails-TableRow\">\n            {tableHeaders.map(({ name, code }) => (\n              !gateNo && (name === 'Gate' || name === 'Stand') ? null\n                : (\n                  <Table.HeaderCell\n                    key={code}\n                    textAlign=\"center\"\n                    className={cn({\n                      'FlightDetails-HeaderCell': true,\n                      [`FlightDetails-HeaderCell_${code}`]: true,\n                    })}\n                  >\n                    {name}\n                  </Table.HeaderCell>\n                )))}\n          </Table.Row>\n        </Table.Header>\n        <Table.Body className=\"FlightDetails-TableBody\">\n          <Table.Row\n            className=\"Flight FlightsTable-TableRow\"\n            textAlign=\"center\"\n          >\n            <Table.Cell>{visibleDate}</Table.Cell>\n            <Table.Cell>{localeTime}</Table.Cell>\n            <Table.Cell>{term}</Table.Cell>\n            <Table.Cell>{codeShareData[0].codeShare}</Table.Cell>\n            {checkinNo ? <Table.Cell>{checkinNo}</Table.Cell> : null}\n            {gateNo ? <Table.Cell>{gateNo}</Table.Cell> : null}\n          </Table.Row>\n        </Table.Body>\n      </Table>\n      <Header\n        className=\"FlightDetails-Status\"\n        content={statusFlight(status)}\n        textAlign=\"left\"\n        size=\"huge\"\n      />\n      <Accordion\n        className=\"FlightDetails-Airline\"\n        panels={[{\n          key: 'Contacts',\n          title: {\n            content: <Label\n              content=\"Airline contacts\"\n              color=\"blue\"\n              size=\"big\"\n            />,\n          },\n          content: {\n            content: (\n              <Message info size=\"big\">\n                <Message.Header className=\"FlightDetails-AirlineName\">\n                  {airline.en.name}\n                  <Image\n                    className=\"FlightDetails-DestinationImage\"\n                    src={airline.en.logoSmallName}\n                    verticalAlign=\"middle\"\n                    size=\"tiny\"\n                  />\n                </Message.Header>\n                {ReactHtmlParser(airline.en.about)}\n              </Message>\n            ),\n          },\n        }]}\n      />\n    </div>\n  );\n};\n\nexport default FlightDetails;\n","import React, { useEffect } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as selectors from '../../store';\nimport HomePage from '../HomePage';\nimport ErrorPage from '../ErrorPage';\nimport FlightsPage from '../FlightsPage';\nimport FlightDetails from '../FlightDetails';\nimport Spinner from '../common/Spinner';\nimport './Main.scss';\n\nconst Main = () => {\n  const dispatch = useDispatch();\n  const loading = useSelector(selectors.getLoading);\n  const loaded = useSelector(selectors.getLoaded);\n\n  useEffect(() => {\n    dispatch(selectors.loadFlights());\n  }, [dispatch]);\n\n  return (\n    <div className=\"Main\">\n      {loading && !loaded ? (\n        <Spinner />\n      ) : (\n        <Switch>\n          <Route path=\"/flights/:currentDay(yesterday|today|tomorrow)?\" exact>\n            <FlightsPage />\n          </Route>\n\n          <Route path=\"/flights/:flightsId\">\n            <FlightDetails />\n          </Route>\n\n          <Route path=\"/\" exact>\n            <HomePage />\n          </Route>\n          <Redirect from=\"/home\" to=\"/\" />\n\n          <Route path=\"/error\">\n            <ErrorPage message=\"Not found\" />\n          </Route>\n\n          <Redirect from=\"/*\" to=\"/error\" />\n        </Switch>\n      )}\n    </div>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport './BackgroundAnimation.scss';\n\nconst BackgroundAnimation = () => (\n  <div className=\"Hero\">\n    <div className=\"Cube Cube_gradient\" />\n    <div className=\"Cube Cube_gradient\" />\n    <div className=\"Cube Cube_gradient\" />\n    <div className=\"Cube Cube_gradient\" />\n    <div className=\"Cube Cube_gradient\" />\n    <div className=\"Cube Cube_gradient\" />\n    <div className=\"Cube Cube_gradient\" />\n  </div>\n);\n\nexport default BackgroundAnimation;\n","import React from 'react';\nimport Nav from './components/Nav/Nav';\nimport Main from './components/Main';\nimport BackgroundAnimation from './components/common/BackgroundAnimation';\nimport './App.scss';\n\nconst App = () => (\n  <div className=\"App\">\n    <Nav />\n    <Main />\n\n    <footer className=\"App-Footer\">\n      &copy;Andreas Just 2020\n    </footer>\n\n    <BackgroundAnimation />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\nimport store from './store';\n\nconst Root = () => (\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}