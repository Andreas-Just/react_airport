{"version":3,"sources":["components/Nav/Nav.tsx","components/HomePage/HomePage.tsx","components/ErrorPage/ErrorPage.tsx","store/loading.ts","constants/actionTypes.ts","store/flights.ts","store/direction.ts","constants/flightDirection.ts","helpers/api.ts","store/index.ts","components/DirectionBtn/DirectionBtn.tsx","components/Flight/Flight.tsx","components/FlightsTable/FlightsTable.tsx","components/common/Spinner/Spinner.tsx","components/FlightsPage/FlightsPage.tsx","components/Main/Main.tsx","components/common/BackgroundAnimation/BackgroundAnimation.tsx","App.tsx","index.tsx"],"names":["Nav","Menu","className","inverted","color","Item","src","alt","position","as","NavLink","name","to","exact","HomePage","Segment","Header","content","size","ErrorPage","message","setError","error","type","initialState","loading","loaded","reduce","loadingState","action","departure","arrival","flightsState1","body","setDirection","direction","directionState","today","Date","toISOString","split","reverse","join","getFlights","day","fetch","then","response","json","rootReducer","combineReducers","loadingReducer","flights","flightsReducer","directionReducer","getLoading","state","getLoaded","getError","getFlightsAll","getDirection","store","createStore","composeWithDevTools","applyMiddleware","thunk","buttonConfig","DirectionBtn","dispatch","useDispatch","useSelector","map","cn","key","onClick","viewBox","xmlns","transform","fill","d","Flight","flight","ID","actual","airline","airportTo","airportFrom","codeShareData","gateNo","status","term","selectors","localDate","localeTime","getHours","getMinutes","toString","padStart","console","log","Table","Row","Cell","en","codeShare","Button","icon","basic","Icon","headersConfig","terminal","gate","time","destination","details","FlightsTable","tableHeaders","length","code","Object","entries","createTableHeaders","fixed","celled","HeaderCell","Body","Spinner","FlightsPage","useEffect","a","Main","path","render","from","BackgroundAnimation","App","Root","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4e4cefc5.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Nav.scss';\nimport { Menu } from 'semantic-ui-react';\n\nconst Nav = () => {\n  return (\n    <Menu\n      className=\"Nav NavBar\"\n      inverted\n      color=\"blue\"\n    >\n      <Menu.Item className=\"Nav-Item\">\n        <img\n          className=\"Nav-Logo\"\n          src=\"https://iev.aero/_nuxt/img/logo.c97e286.png\"\n          alt=\"Sikorsky Airport\"\n        />\n      </Menu.Item>\n\n      <Menu.Item\n        className=\"Nav-Item\"\n        position=\"right\"\n        as={NavLink}\n        name=\"home\"\n        to=\"/\"\n        exact\n      />\n      <Menu.Item\n        className=\"Nav-Item\"\n        as={NavLink}\n        name=\"flights\"\n        to=\"/flights\"\n        exact\n      />\n    </Menu>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\nimport { Header, Segment } from 'semantic-ui-react';\nimport './HomePage.scss';\n\nconst HomePage = () => (\n  <div className=\"HomePage\">\n    <Segment\n      className=\"HomePage-Wrapper\"\n    >\n      <Header\n        content=\"Welcome to the People Table project!\"\n        className=\"HomePage-Header\"\n        size=\"huge\"\n        color=\"blue\"\n      />\n      <Header\n        className=\"HomePage-Text\"\n        size=\"large\"\n        color=\"blue\"\n      >\n        Here you can download and view the list of people in the form of a\n        table, as well as select a specific person, sort people in each column\n        in ascending and descending order.\n        To store and control the state of the application, use the History API.\n      </Header>\n    </Segment>\n  </div>\n);\n\nexport default HomePage;\n","import React from 'react';\n\ntype Props = {\n  message: string;\n};\n\nconst ErrorPage: React.FC<Props> = ({ message }) => <h2>{message}</h2>;\n\nexport default ErrorPage;\n","import { Action } from 'redux';\nimport {\n  START_LOADING,\n  SET_LOADED,\n  SET_ERROR,\n  FINISH_LOADING,\n} from '../constants/actionTypes';\n\ntype StartLoadingAction = Action<typeof START_LOADING>;\ntype FinishLoadingAction = Action<typeof FINISH_LOADING>;\ntype SetLoadedAction = Action<typeof SET_LOADED>;\ntype SetErrorAction = Action<typeof SET_ERROR> & {\n  error: string;\n};\n\nexport const startLoading = (): StartLoadingAction => ({\n  type: START_LOADING,\n});\nexport const finishLoading = (): FinishLoadingAction => ({\n  type: FINISH_LOADING,\n});\nexport const setLoaded = (): SetLoadedAction => ({\n  type: SET_LOADED,\n});\nexport const setError = (error = ''): SetErrorAction => ({\n  type: SET_ERROR,\n  error,\n});\n\nexport type LoadingState = {\n  loading: boolean;\n  loaded: boolean;\n  error: string;\n};\n\nconst initialState: LoadingState = {\n  loading: false,\n  loaded: false,\n  error: '',\n};\n\ntype LoadingAction = StartLoadingAction | SetLoadedAction | SetErrorAction | FinishLoadingAction;\n\nconst reduce = (loadingState = initialState, action: LoadingAction): LoadingState => {\n  switch (action.type) {\n    case START_LOADING:\n      return { ...loadingState, loading: true };\n    case SET_LOADED:\n      return { ...loadingState, loaded: true };\n    case SET_ERROR:\n      return { ...loadingState, error: action.error };\n    case FINISH_LOADING:\n      return { ...loadingState, loading: false };\n    default:\n      return loadingState;\n  }\n};\n\nexport default reduce;\n","export const START_LOADING = 'START_LOADING';\nexport const SET_LOADED = 'SET_LOADED';\nexport const SET_ERROR = 'SET_ERROR';\nexport const FINISH_LOADING = 'FINISH_LOADING';\n\nexport const INIT_FLIGHTS = 'INIT_FLIGHTS';\n\nexport const SET_DIRECTION = 'SET_DIRECTION';\n","import { Action } from 'redux';\nimport { INIT_FLIGHTS } from '../constants/actionTypes';\n\ntype FlightsAction = Action<typeof INIT_FLIGHTS> & {\n  body: IFlights;\n};\n\nexport const initFlights = (body: IFlights): FlightsAction => ({\n  type: INIT_FLIGHTS,\n  body,\n});\n\nexport type FlightsState = {\n  [key: string]: IFlight[];\n  departure: IFlight[];\n  arrival: IFlight[];\n};\n\nconst initialState: FlightsState = {\n  departure: [],\n  arrival: [],\n};\n\nconst reduce = (\n  flightsState1 = initialState,\n  { type, body }: FlightsAction,\n): FlightsState => {\n  switch (type) {\n    case INIT_FLIGHTS:\n      return {\n        ...flightsState1,\n        departure: body.departure,\n        arrival: body.arrival,\n      };\n    default:\n      return flightsState1;\n  }\n};\n\nexport default reduce;\n","import { Action } from 'redux';\nimport { DEPARTURE, ARRIVAL } from '../constants/flightDirection';\nimport { SET_DIRECTION } from '../constants/actionTypes';\n\ntype DirectionAction = Action<typeof SET_DIRECTION> & {\n  direction: typeof DEPARTURE | typeof ARRIVAL;\n};\n\nexport const setDirection = (direction: typeof DEPARTURE | typeof ARRIVAL): DirectionAction => ({\n  type: SET_DIRECTION,\n  direction,\n});\n\nconst reduce = (\n  directionState = DEPARTURE,\n  { type, direction }: DirectionAction,\n): string => {\n  switch (type) {\n    case SET_DIRECTION:\n      if (direction === directionState) {\n        return directionState;\n      }\n\n      return direction;\n    default:\n      return directionState;\n  }\n};\n\nexport default reduce;\n","export const DEPARTURE = 'departure';\nexport const ARRIVAL = 'arrival';\n","const API_URL = 'https://api.iev.aero/api/flights/';\n\nconst getData = <T>(day: string): Promise<T[]> => {\n  return fetch(`${API_URL}${day}`)\n    .then(response => response.json());\n};\n\nconst today = new Date()\n  .toISOString().split('T')[0]\n  .split('-').reverse().join('-');\n\nexport const getFlights = () => getData<IFlights>(today)\n  .then(({ body }: any) => body);\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { Dispatch } from 'react';\n\nimport loadingReducer, {\n  setError, finishLoading, startLoading, setLoaded,\n} from './loading';\nimport flightsReducer, { initFlights } from './flights';\nimport directionReducer from './direction';\nimport { getFlights } from '../helpers/api';\n\n/**\n * Each concrete reducer will receive all the actions but only its part of the state\n */\nconst rootReducer = combineReducers({\n  loading: loadingReducer,\n  flights: flightsReducer,\n  direction: directionReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\n// Selectors - a function receiving Redux state and returning some data from it\nexport const getLoading = (state: RootState) => state.loading.loading;\nexport const getLoaded = (state: RootState) => state.loading.loaded;\nexport const getError = (state: RootState) => state.loading.error;\nexport const getFlightsAll = (state: RootState) => state.flights;\nexport const getDirection = (state: RootState) => state.direction;\n\n/**\n * Thunk - is a function that should be used as a normal action creator dispatch(loadFlights())\n */\nexport const loadFlights = () => {\n  return async (dispatch: Dispatch<any>) => {\n    dispatch(startLoading());\n\n    try {\n      const flights = await getFlights();\n\n      dispatch(initFlights(flights));\n      dispatch(setLoaded());\n    } catch (error) {\n      dispatch(setError(error.message));\n    }\n\n    dispatch(finishLoading());\n  };\n};\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nexport default store;\n","import React from 'react';\nimport cn from 'classnames';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getDirection } from '../../store';\nimport { setDirection } from '../../store/direction';\nimport { ARRIVAL, DEPARTURE } from '../../constants/flightDirection';\nimport './DirectionBtn.scss';\n\ntype ButtonConfig = {\n  [key: string]: typeof DEPARTURE | typeof ARRIVAL;\n};\n\nconst buttonConfig: ButtonConfig[] = [\n  { name: 'departure' },\n  { name: 'arrival' },\n];\n\nconst DirectionBtn = () => {\n  const dispatch = useDispatch();\n  const direction = useSelector(getDirection);\n\n  return (\n    <div className=\"DirectionBtn\">\n      {buttonConfig.map(({ name }) => (\n        name === DEPARTURE\n          ? (\n            <button\n              className={cn({\n                'DirectionBtn-AirBtn DirectionBtn-AirBtn_departures': true,\n                'DirectionBtn-AirBtn_focus': direction === DEPARTURE,\n                'DirectionBtn-AirBtn_focusNo': direction !== DEPARTURE,\n              })}\n              key={name}\n              type=\"button\"\n              onClick={() => dispatch(setDirection(DEPARTURE))}\n            >\n              <span>\n                <svg\n                  className=\"DirectionBtn-Svg\"\n                  viewBox=\"0 0 40 28\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <g\n                    transform=\"translate(-1.000000, -1.000000)\"\n                    fill=\"currentColor\"\n                  >\n                    <path\n                      d=\"M40.9190312,14.2925525 C40.731055,13.5210761 40.2396434,12.8581323 39.5561585,12.4539552 C38.8726735,12.0497781 38.0549837,11.9385881 37.2883912,12.1455827 L26.8096581,15.0218819 L13.1945082,2 L9.38678826,3.03046545 L17.5564785,17.5510243 L7.75204986,20.2442408 L3.86129243,17.1278331 L1,17.9171897 L4.59162231,24.3200818 L6.11030829,27.0112974 L9.26373268,26.1409043 L19.7414654,23.2656055 L28.3253427,20.9165445 L38.8070772,18.0372439 C40.4055057,17.5625364 41.3397513,15.9060318 40.9190312,14.2925525 Z\"\n                      transform=\"translate(21.009879, 14.505649) rotate(-4.012171) translate(-21.009879, -14.505649)\"\n                    />\n                  </g>\n                </svg>\n              </span>\n              {`${name}s`}\n            </button>\n          ) : (\n            <button\n              className={cn({\n                'DirectionBtn-AirBtn DirectionBtn-AirBtn_arrivals': true,\n                'DirectionBtn-AirBtn_focus': direction === ARRIVAL,\n                'DirectionBtn-AirBtn_focusNo': direction !== ARRIVAL,\n              })}\n              key={name}\n              type=\"button\"\n              onClick={() => dispatch(setDirection(ARRIVAL))}\n            >\n              <span>\n                <svg\n                  className=\"DirectionBtn-Svg\"\n                  viewBox=\"0 0 40 28\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <g\n                    fill=\"currentColor\"\n                    transform=\"translate(-4.000000, -7.000000)\"\n                  >\n                    <path\n                      d=\"M43.8940167,20.2848496 C43.7061583,19.5138567 43.2150547,18.8513283 42.531998,18.4474045 C41.8489414,18.0434806 41.031764,17.9323603 40.2656518,18.1392252 L29.793485,21.013722 L16.1868667,8 L12.3815328,9.02981973 L20.5461037,23.5412796 L10.7478188,26.2328084 L6.85949946,23.1183536 L4,23.9072155 L7.5893717,30.3060954 L9.10710602,32.9956246 L12.2585544,32.1257769 L22.7297214,29.2522799 L31.3082198,26.9046908 L41.7833862,24.0271945 C43.3808131,23.5527844 44.3144732,21.8973179 43.8940167,20.2848496 Z\"\n                      transform=\"translate(23.997341, 20.497812) rotate(27.974730) translate(-23.997341, -20.497812) \"\n                    />\n                  </g>\n                </svg>\n              </span>\n              {`${name}s`}\n            </button>\n          )))}\n    </div>\n  );\n};\n\nexport default DirectionBtn;\n","import React from 'react';\nimport { Button, Icon, Table } from 'semantic-ui-react';\nimport { useSelector } from 'react-redux';\nimport * as selectors from '../../store';\nimport { DEPARTURE } from '../../constants/flightDirection';\nimport './Flight.scss';\n\ntype Props = {\n  flight: IFlight;\n};\n\nconst Flight: React.FC<Props> = ({ flight: {\n  ID,\n  actual,\n  airline,\n  'airportToID.city_en': airportTo,\n  'airportFromID.city_en': airportFrom,\n  // checkinNo = '',\n  codeShareData,\n  gateNo = '',\n  status,\n  // timeArrShedule = '',\n  // timeDepShedule = '',\n  term,\n} }) => {\n  const direction = useSelector(selectors.getDirection);\n  const localDate = new Date(actual);\n  const localeTime = `\n    ${localDate.getHours()}:${localDate.getMinutes().toString().padStart(2, '0')}\n  `;\n  // const departureDate = new Date(timeArrShedule || timeDepShedule);\n  // const departureTime = `\n  //   ${departureDate.getHours()}:${departureDate.getMinutes().toString().padStart(2, '0')}\n  // `;\n\n  console.log(localDate);\n\n  return (\n    <Table.Row key={ID} className=\"Flight FlightsTable-TableRow\">\n      <Table.Cell className=\"Flight-Term\">\n        <span className={term === 'A' ? 'Flight-Term_a' : 'Flight-Term_d'}>\n          {term}\n        </span>\n      </Table.Cell>\n      {direction === DEPARTURE ? <td>{gateNo}</td> : null}\n      <Table.Cell>{localeTime}</Table.Cell>\n      <Table.Cell>{airportTo || airportFrom}</Table.Cell>\n      <Table.Cell>{status}</Table.Cell>\n      <Table.Cell>{airline ? airline.en.name : null}</Table.Cell>\n      <Table.Cell>{codeShareData[0].codeShare}</Table.Cell>\n      <Table.Cell className=\"Flight-Details\">\n        <Button\n          className=\"Flight-DetailsButton\"\n          icon\n          basic\n          color=\"blue\"\n          size=\"small\"\n        >\n          <Icon className=\"Flight-DetailsIcon\" name=\"plane\" />\n          Details\n        </Button>\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nexport default Flight;\n","import React from 'react';\nimport cn from 'classnames';\nimport { Table } from 'semantic-ui-react';\nimport { useSelector } from 'react-redux';\nimport * as selectors from '../../store';\nimport Flight from '../Flight';\nimport { ARRIVAL } from '../../constants/flightDirection';\nimport './FlightsTable.scss';\n\nconst headersConfig: IHeadersConfig = {\n  terminal: 'Terminal',\n  gate: 'Gate',\n  time: 'Local time',\n  destination: 'Destination',\n  status: 'Status',\n  airline: 'Airline',\n  flight: 'Flight',\n  details: 'Details',\n};\n\ntype TableHeader = {\n  code: string;\n  name: string;\n};\n\nconst createTableHeaders = (flights: IFlight[]): TableHeader[] => {\n  if (flights.length === 0) {\n    return [{ name: 'There are no flights', code: '' }];\n  }\n\n  return (\n    Object.entries(headersConfig).map(([key, value]) => ({\n      code: key, name: value,\n    }))\n  );\n};\n\nconst FlightsTable = () => {\n  const direction = useSelector(selectors.getDirection);\n  const flights = useSelector(selectors.getFlightsAll)[direction];\n\n  const tableHeaders = createTableHeaders(flights);\n\n  console.log(flights)\n\n  return (\n    <Table\n      className=\"FlightsTable\"\n      fixed\n      celled\n    >\n      <Table.Header className=\"FlightsTable-TableHeader\">\n        <Table.Row className=\"FlightsTable-TableRow\">\n          {tableHeaders.map(({ name, code }) => (\n            direction === ARRIVAL && name === 'Gate' ? null\n              : (\n                <Table.HeaderCell\n                  key={code}\n                  className={cn({\n                    'FlightsTable-HeaderCell': true,\n                    [`FlightsTable-HeaderCell_${code}`]: true,\n                  })}\n                >\n                  {name}\n                </Table.HeaderCell>\n              )))}\n        </Table.Row>\n      </Table.Header>\n\n      <Table.Body className=\"FlightsTable-TableBody\">\n        {flights.map(flight => (\n          <Flight\n            key={flight.ID}\n            flight={flight}\n          />\n        ))}\n      </Table.Body>\n    </Table>\n  );\n};\n\nexport default FlightsTable;\n","import React from 'react';\nimport './Spinner.scss';\n\nconst Spinner = () => (\n  <div className=\"Spinner\">\n    <h2 className=\"Spinner-TextInfo\">\n      Loa\n      <span className=\"Spinner-D\">d</span>\n      ing...\n    </h2>\n    <div className=\"Spinner-Circle\">\n      <span className=\"Spinner-Line\" />\n      <span className=\"Spinner-Line\" />\n      <span className=\"Spinner-Line\" />\n      <span className=\"Spinner-Line\" />\n    </div>\n  </div>\n);\n\nexport default Spinner;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Header } from 'semantic-ui-react';\nimport * as selectors from '../../store';\nimport DirectionBtn from '../DirectionBtn';\nimport FlightsTable from '../FlightsTable';\nimport Spinner from '../common/Spinner';\nimport './FlightsPage.scss';\n\nconst FlightsPage = () => {\n  const dispatch = useDispatch();\n  const loading = useSelector(selectors.getLoading);\n  const loaded = useSelector(selectors.getLoaded);\n  const error = useSelector(selectors.getError);\n\n  useEffect(() => {\n    dispatch(selectors.loadFlights());\n  }, [dispatch]);\n\n  return (\n    <div className=\"FlightsPage\">\n      {loading && !loaded ? (\n        <Spinner />\n      ) : (\n        <>\n          <Header\n            className=\"FlightsPage-Header\"\n            content=\"Flights table\"\n            color=\"blue\"\n            size=\"huge\"\n          />\n          <Header\n            className=\"FlightsPage-Error\"\n            content={error}\n            color=\"red\"\n            as=\"h2\"\n          />\n          <DirectionBtn />\n          <FlightsTable />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default FlightsPage;\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport HomePage from '../HomePage';\nimport ErrorPage from '../ErrorPage';\nimport FlightsPage from '../FlightsPage';\nimport './Main.scss';\n\nconst Main = () => {\n  return (\n    <div className=\"Main\">\n      <Switch>\n        <Route\n          path=\"/flights/:flightsID?\"\n          render={() => (\n            <FlightsPage />\n          )}\n        />\n\n        <Route path=\"/\" exact>\n          <HomePage />\n        </Route>\n        <Redirect from=\"/home\" to=\"/\" />\n\n        <Route path=\"/error\">\n          <ErrorPage message=\"Not found\" />\n        </Route>\n\n        <Redirect from=\"/*\" to=\"/error\" />\n      </Switch>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport './BackgroundAnimation.scss';\n\nconst BackgroundAnimation = () => (\n  <div className=\"Hero\">\n    <div className=\"Cube Cube_gradient\" />\n    <div className=\"Cube Cube_gradient\" />\n    <div className=\"Cube Cube_gradient\" />\n    <div className=\"Cube Cube_gradient\" />\n    <div className=\"Cube Cube_gradient\" />\n    <div className=\"Cube Cube_gradient\" />\n    <div className=\"Cube Cube_gradient\" />\n  </div>\n);\n\nexport default BackgroundAnimation;\n","import React from 'react';\nimport Nav from './components/Nav/Nav';\nimport Main from './components/Main';\nimport BackgroundAnimation from './components/common/BackgroundAnimation';\nimport './App.scss';\n\nconst App = () => (\n  <div className=\"App\">\n    <Nav />\n    <Main />\n\n    <footer className=\"App-Footer\">\n      &copy;Andreas Just 2020\n    </footer>\n\n    <BackgroundAnimation />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\nimport store from './store';\n\nconst Root = () => (\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}